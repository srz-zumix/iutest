version: 2
jobs:
  optimize_test:
    branches:
      only:
        - master
        - develop
    working_directory: ~/srz-zumix/iutest
    parallelism: 4
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
    docker:
    - image: circleci/buildpack-deps:cosmic-browsers
    steps:
    - checkout
    - run: mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    - restore_cache:
        keys:
        # This branch if available
        - v2-dep-{{ .Branch }}-
        # Default branch if not
        - v2-dep-master-
        # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
        - v2-dep-
    - run: sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    - run: wget -q -O - http://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
    - run: sudo add-apt-repository -y 'deb http://apt.llvm.org/cosmic/ llvm-toolchain-cosmic-7 main'
    - run: sudo apt-get -y --allow-unauthenticated update
    - run: sudo apt-get -qq install clang-7
    - run: sudo apt-get -qq install g++-8
    - run: sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 90
    - run: sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90
    - run: sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-7 60
    - run: sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-7 60
    - save_cache:
        key: v2-dep-{{ .Branch }}-{{ epoch }}
        paths:
        # This is a broad list of cache paths to include many possible development environments
        # You can probably delete some of these entries
        - vendor/bundle
        - ~/virtualenvs
        - ~/.m2
        - ~/.ivy2
        - ~/.bundle
        - ~/.go_workspace
        - ~/.gradle
        - ~/.cache/bower
    # Test
    - run:
        name: make CXX=g++ showcxxversion
        command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then make CXX=g++ showcxxversion; fi
        working_directory: test
    - run:
        name: make CXX=clang++ showcxxversion
        command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then make CXX=clang++ showcxxversion; fi
        working_directory: test
    - run:
        name: make CXX=clang++ minimum_tests && ./minimum_tests --spec
        command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then make CXX=clang++ minimum_tests && ./minimum_tests --spec; fi
        working_directory: test
    - run:
        command: case $CIRCLE_NODE_INDEX in 0) make all CXX=g++ OUTPUTXML=1 OPTIMIZE=-O2 ;; 1) make all CXX=g++ OUTPUTXML=1 OPTIMIZE=-Os ;; 2) make all CXX=g++ OUTPUTXML=1 OPTIMIZE=-O3 ;; 3) make all CXX=g++ OUTPUTXML=1 OPTIMIZE=-O4 ;; esac
        working_directory: test
    - run:
        command: case $CIRCLE_NODE_INDEX in 0) make all CXX=clang++ OUTPUTXML=1 OPTIMIZE=-O2 ;; 1) make all CXX=clang++ OUTPUTXML=1 OPTIMIZE=-Os ;; 2) make all CXX=clang++ OUTPUTXML=1 OPTIMIZE=-O3 ;; 3) make all CXX=clang++ OUTPUTXML=1 OPTIMIZE=-Oz ;; esac
        working_directory: test
    - run:
        name: mkdir -p $CIRCLE_TEST_REPORTS/junit/
        command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then mkdir -p $CIRCLE_TEST_REPORTS/junit/; fi
    - run:
        name: find . -type f -regex ".*/test/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;
        command: if [ "$CIRCLE_NODE_INDEX" == "0" ]; then find . -type f -regex ".*/test/.*xml" -exec cp {} $CIRCLE_TEST_REPORTS/junit/ \;; fi
    # Teardown
    - store_test_results:
        path: /tmp/circleci-test-results
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: /tmp/circleci-test-results

workflows:
  version: 2
  optimize_test:
    jobs:
      - optimize_test
