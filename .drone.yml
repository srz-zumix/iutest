kind: pipeline
name: gcc-matrix

trigger:
  branch:
    - master
    - develop

steps:
  - &gcc
    name: 10
    image: gcc:10
    commands:
      - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
      - make showcxxversion && make clean && make -j4
      - make test
      - make report
      - make clean
    # depends_on: [ clone ]
  -
    <<: *gcc
    name: 9
    image: gcc:9
  -
    <<: *gcc
    name: 8
    image: gcc:8
  -
    <<: *gcc
    name: 7
    image: gcc:7
  -
    <<: *gcc
    name: 6
    image: gcc:6
  -
    <<: *gcc
    name: 5
    image: gcc:5
  -
    <<: *gcc
    name: 4.9
    image: gcc:4.9
  -
    <<: *gcc
    name: 4.8
    image: gcc:4.8
  -
    <<: *gcc
    name: 4.7
    image: gcc:4.7
  -
    <<: *gcc
    name: 4.6
    image: gcc:4.6
  -
    <<: *gcc
    name: latest
    image: gcc:latest
    when:
      branch:
        exclude:
          - master
  -
    <<: *gcc
    name: 3
    image: srzzumix/gcc3:centos5
    commands:
      - "cp -R ./ ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
      - find . -type f \( -name \*.hpp -or -name \*.cpp -or -name \*.ipp \) -exec sed -i -e '1s/^\xEF\xBB\xBF//' {} \;
      - cd test
      - make showcxxversion && make clean && make -j4
      - make test
      - make report
      - make clean

---

kind: pipeline
name: clang-matrix

trigger:
  branch:
    - master
    - develop

steps:
  - &clang
    name: 11
    image: docker pull clangbuiltlinux/debian:llvm11-latest
    commands:
      - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
      - make showcxxversion && make clean && make -j4
      - make test
      - make report
      - make clean
    # environment:
    #   CC: clang
    #   CXX: clang++
    # depends_on: [ clone ]
  -
    <<: *clang
    name: 10
    image: docker pull clangbuiltlinux/debian:llvm10-latest
  -
    <<: *clang
    name: 9
    image: docker pull clangbuiltlinux/debian:llvm9-latest
  -
    <<: *clang
    name: 8
    image: docker pull clangbuiltlinux/debian:llvm8-latest
  # -
  #   <<: *clang
  #   name: 7
  #   image: docker pull clangbuiltlinux/debian:7
  # -
  #   <<: *clang
  #   name: 6
  #   image: docker pull clangbuiltlinux/debian:6
  # -
  #   <<: *clang
  #   name: 5
  #   image: docker pull clangbuiltlinux/debian:5
  # -
  #   <<: *clang
  #   name: 4
  #   image: docker pull clangbuiltlinux/debian:4
  # -
  #   <<: *clang
  #   name: 3.９
  #   image: docker pull clangbuiltlinux/debian:3.９
  # -
  #   <<: *clang
  #   name: 3.8
  #   image: docker pull clangbuiltlinux/debian:3.8
  # -
  #   <<: *clang
  #   name: 3.7
  #   image: docker pull clangbuiltlinux/debian:3.7
  # -
  #   <<: *clang
  #   name: 3.6
  #   image: docker pull clangbuiltlinux/debian:3.6
  # -
  #   <<: *clang
  #   name: 3.5
  #   image: docker pull clangbuiltlinux/debian:3.5
  # -
  #   <<: *clang
  #   name: 3.4
  #   image: docker pull clangbuiltlinux/debian:3.4
  # -
  #   <<: *clang
  #   name: 3.3
  #   image: docker pull clangbuiltlinux/debian:3.3
  # -
  #   <<: *clang
  #   name: 3.2
  #   image: docker pull clangbuiltlinux/debian:3.2
  # -
  #   <<: *clang
  #   name: 3.1
  #   image: docker pull clangbuiltlinux/debian:3.1
  # -
  #   <<: *clang
  #   name: 3.0
  #   image: docker pull clangbuiltlinux/debian:3.0
  # -
  #   <<: *clang
  #   name: 2.9
  #   image: docker pull clangbuiltlinux/debian:2.9  -
  # -
  #   <<: *clang
  #   name: latest
  #   image: docker pull clangbuiltlinux/debian:latest
  #   when:
  #     branch:
  #       exclude:
  #         - master

---

kind: pipeline
name: cpp03

trigger:
  branch:
    - master
    - develop

steps:
  - &gcc
    name: 10-c++03
    image: gcc:10
    commands: &syntax-test-commands
      - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
      - make clean && make run_syntax_tests report ${MAKE_OPTIONS}
      - make clean && make run_syntax_tests report ${MAKE_OPTIONS} USE_GNU_EXTENSION=1
      - make clean
    environment:
      MAKE_OPTIONS: STDFLAGS=c++03
    # depends_on: [ clone ]
  -
    <<: *gcc
    name: 9
    image: gcc:9
  -
    <<: *gcc
    name: 8
    image: gcc:8
  -
    <<: *gcc
    name: 7
    image: gcc:7
  -
    <<: *gcc
    name: 6
    image: gcc:6
  -
    <<: *gcc
    name: 5
    image: gcc:5
  -
    <<: *gcc
    name: 4.9
    image: gcc:4.9
  -
    <<: *gcc
    name: 4.8
    image: gcc:4.8
  -
    <<: *gcc
    name: 4.7
    image: gcc:4.7
  -
    <<: *gcc
    name: 4.6
    image: gcc:4.6

---

kind: pipeline
name: gtest-compatible-released

trigger:
  branch:
    - drone/*
    # - master
    # - develop
    # - feature/*
    # - fix/*
    # - drone/*

steps:
- name: latest
  image: srzzumix/googletest:latest
  environment:
    GTEST_EXPECT_VERSION: 0x01100000
  commands:
    - "cd test"
    - "make showcxxversion"
    - >
      make clean &&
      make -j4 USE_GTEST=1             GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} GTEST_EXPECT_LATEST=1 &&
      make test
    - >
      make clean &&
      make -j4 USE_GTEST=1 USE_GMOCK=1 GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} GTEST_EXPECT_LATEST=1 &&
      make test
  depends_on: [ clone ]
  when:
    branch:
      exclude:
        - master
- name: release-1.10.0
  image: srzzumix/googletest:release-1.10.0
  environment:
    GTEST_EXPECT_VERSION: 0x01100000
  commands: &gtest-compatible-commands
    - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
    - "make showcxxversion"
    - >
      make clean &&
      make -j4 USE_GTEST=1             GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} &&
      make test
    - >
      make clean &&
      make -j4 USE_GTEST=1 USE_GMOCK=1 GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} &&
      make test
  depends_on: [ clone ]
- name: release-1.8.1
  image: srzzumix/googletest:release-1.8.1
  environment:
    GTEST_EXPECT_VERSION: 0x01080100
  commands: *gtest-compatible-commands
  depends_on: [ clone ]
- name: release-1.8.0
  image: srzzumix/googletest:release-1.8.0
  environment:
    GTEST_EXPECT_VERSION: 0x01080000
  commands: *gtest-compatible-commands
  depends_on: [ clone ]
- name: release-1.7.0
  image: srzzumix/googletest:release-1.7.0
  environment:
    GTEST_EXPECT_VERSION: 0x01070000
  commands: *gtest-compatible-commands
  depends_on: [ clone ]
- name: release-1.6.0
  image: srzzumix/googletest:release-1.6.0
  environment:
    GTEST_EXPECT_VERSION: 0x01060000
  commands: *gtest-compatible-commands
  depends_on: [ clone ]
- name: release-1.5.0
  image: srzzumix/googletest:release-1.5.0
  environment:
    GTEST_EXPECT_VERSION: 0x01050000
  commands: *gtest-compatible-commands
  depends_on: [ clone ]
# https://github.com/srz-zumix/docker-googletest/issues/2
# - name: release-1.4.0
#   image: srzzumix/googletest:release-1.4.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01040000
#   commands: *gtest-compatible-commands
#   depends_on: [ clone ]
#  google test 1.3.0 or less is not supported...
# - name: release-1.3.0
#   image: srzzumix/googletest:release-1.3.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01030000
#   commands: *gtest-compatible-commands
#   depends_on: [ clone ]
# - name: release-1.2.1
#   image: srzzumix/googletest:release-1.2.1
#   environment:
#     GTEST_EXPECT_VERSION: 0x01020100
#   commands: *gtest-compatible-commands
#   depends_on: [ clone ]
# - name: release-1.2.0
#   image: srzzumix/googletest:release-1.2.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01020000
#   commands: *gtest-compatible-commands
#   depends_on: [ clone ]
# - name: release-1.1.0
#   image: srzzumix/googletest:release-1.1.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01010000
#   commands: *gtest-compatible-commands
#   depends_on: [ clone ]
# - name: release-1.0.0
#   image: srzzumix/googletest:release-1.0.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01000000
#   commands: *gtest-compatible-commands
#   depends_on: [ clone ]
- name: slack
  image: plugins/slack
  settings:
    webhook:
      from_secret: SLACK_WEBHOOK
    channel: ci
    username: drone
    icon_url: https://raw.githubusercontent.com/drone/brand/master/logos/png/drone-logo-dark_256.png
  when:
    status: [ failure ]
  depends_on:
    - latest
    - release-1.10.0
    - release-1.8.1
    - release-1.8.0
    - release-1.7.0
    - release-1.6.0
    - release-1.5.0
    # - release-1.4.0
    # - release-1.3.0
    # - release-1.2.1
    # - release-1.2.0
    # - release-1.1.0
    # - release-1.0.0

---
kind: pipeline
name: gtest-version-detect

trigger:
  branch:
    - drone/*
    # - master
    # - develop
    # - feature/*
    # - fix/*
    # - drone/*

steps:
- name: latest
  image: srzzumix/googletest:latest
  environment:
    GTEST_EXPECT_VERSION: 0x01100000
  commands:
    - "cd test"
    - "make showcxxversion"
    - >
      make clean &&
      make USE_GTEST=1             GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} GTEST_EXPECT_LATEST=1 gtest-version
    - >
      make clean &&
      make USE_GTEST=1 USE_GMOCK=1 GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} GTEST_EXPECT_LATEST=1 gtest-version
  depends_on: [ clone ]
  when:
    branch:
      exclude:
        - master
  depends_on: [ clone ]
- name: release-1.10.0
  image: srzzumix/googletest:release-1.10.0
  environment:
    GTEST_EXPECT_VERSION: 0x01100000
  commands: &gtest-version-detect-commands
    - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
    - "make showcxxversion"
    - >
      make clean &&
      make USE_GTEST=1             GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} gtest-version
    - >
      make clean &&
      make USE_GTEST=1 USE_GMOCK=1 GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} gtest-version
  depends_on: [ clone ]
- name: release-1.8.1
  image: srzzumix/googletest:release-1.8.1
  environment:
    GTEST_EXPECT_VERSION: 0x01080100
  commands: *gtest-version-detect-commands
  depends_on: [ clone ]
- name: release-1.8.0
  image: srzzumix/googletest:release-1.8.0
  environment:
    GTEST_EXPECT_VERSION: 0x01080000
  commands: *gtest-version-detect-commands
  depends_on: [ clone ]
- name: release-1.7.0
  image: srzzumix/googletest:release-1.7.0
  environment:
    GTEST_EXPECT_VERSION: 0x01070000
  commands: *gtest-version-detect-commands
  depends_on: [ clone ]
- name: release-1.6.0
  image: srzzumix/googletest:release-1.6.0
  environment:
    GTEST_EXPECT_VERSION: 0x01060000
  commands: *gtest-version-detect-commands
  depends_on: [ clone ]
- name: release-1.5.0
  image: srzzumix/googletest:release-1.5.0
  environment:
    GTEST_EXPECT_VERSION: 0x01050000
  commands: *gtest-version-detect-commands
  depends_on: [ clone ]
- name: release-1.4.0
  image: srzzumix/googletest:release-1.4.0
  environment:
    GTEST_EXPECT_VERSION: 0x01040000
  commands: *gtest-version-detect-commands
  depends_on: [ clone ]
#  google test 1.3.0 or less is not supported...
# - name: release-1.3.0
#   image: srzzumix/googletest:release-1.3.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01030000
#   commands: *gtest-version-detect-commands
#   depends_on: [ clone ]
# - name: release-1.2.1
#   image: srzzumix/googletest:release-1.2.1
#   environment:
#     GTEST_EXPECT_VERSION: 0x01020100
#   commands: *gtest-version-detect-commands
#   depends_on: [ clone ]
# - name: release-1.2.0
#   image: srzzumix/googletest:release-1.2.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01020000
#   commands: *gtest-version-detect-commands
#   depends_on: [ clone ]
# - name: release-1.1.0
#   image: srzzumix/googletest:release-1.1.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01010000
#   commands: *gtest-version-detect-commands
#   depends_on: [ clone ]
# - name: release-1.0.0
#   image: srzzumix/googletest:release-1.0.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01000000
#   commands: *gtest-version-detect-commands
#   depends_on: [ clone ]
- name: slack
  image: plugins/slack
  settings:
    webhook:
      from_secret: SLACK_WEBHOOK
    channel: ci
    username: drone
    icon_url: https://raw.githubusercontent.com/drone/brand/master/logos/png/drone-logo-dark_256.png
  when:
    status: [ failure ]
  depends_on:
    - latest
    - release-1.10.0
    - release-1.8.1
    - release-1.8.0
    - release-1.7.0
    - release-1.6.0
    - release-1.5.0
    - release-1.4.0
    # - release-1.3.0
    # - release-1.2.1
    # - release-1.2.0
    # - release-1.1.0
    # - release-1.0.0

# ---
# kind: pipeline
# name: build_docker

# trigger:
#   branch:
#     - master
#     - develop
#     - feature/*
#     - drone/*
#   event:
#     - push

# steps:
# - name: build
#   image: plugins/docker
#   settings:
#     dockerfile: tools/docker/Dockerfile
#     repo: srzzumix/iutest
#     dry_run: true
