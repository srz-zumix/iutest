kind: pipeline
name: gcc-matrix

trigger:
  branch:
    - master
    - develop

image_pull_secrets:
  - dockerconfig

steps:
  - &gcc
    name: 10
    image: gcc:10
    commands:
      - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
      - make showcxxversion && make clean && make -j4 $${MAKE_OPTIONS}
      - make test
      - make report
      - make clean
    # depends_on: [ clone ]
  -
    <<: *gcc
    name: 9
    image: gcc:9
  -
    <<: *gcc
    name: 8
    image: gcc:8
  -
    <<: *gcc
    name: 7
    image: gcc:7
  -
    <<: *gcc
    name: 6
    image: gcc:6
  -
    <<: *gcc
    name: latest
    image: gcc:latest
    when:
      branch:
        exclude:
          - master

---
kind: pipeline
name: gcc-old-matrix

trigger:
  branch:
    - master
    - develop

image_pull_secrets:
  - dockerconfig

steps:
  - &gcc
    name: 5.5
    image: gcc:5.5
    commands:
      - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
      - make showcxxversion && make clean && make -j4 $${MAKE_OPTIONS}
      - make test
      - make report
      - make clean
    # depends_on: [ clone ]
  # -
  #   <<: *gcc
  #   name: 5
  #   image: gcc:5
  -
    <<: *gcc
    name: 5.1
    image: gcc:5.1
  -
    <<: *gcc
    name: 4.9
    image: gcc:4.9
  -
    <<: *gcc
    name: 4.8
    image: gcc:4.8
  -
    <<: *gcc
    name: 4.7
    image: gcc:4.7
  -
    <<: *gcc
    name: 4.6
    image: gcc:4.6
  -
    <<: *gcc
    name: 3
    image: srzzumix/gcc3:centos5
    commands:
      - "cp -R ./ ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
      - find . -type f \( -name \*.hpp -or -name \*.cpp -or -name \*.ipp \) -exec sed -i -e '1s/^\xEF\xBB\xBF//' {} \;
      - cd test
      - make showcxxversion && make clean && make -j4 $${MAKE_OPTIONS}
      - make test
      - make report
      - make clean

---

kind: pipeline
name: clang-matrix

trigger:
  branch:
    - master
    - develop

image_pull_secrets:
  - dockerconfig

steps:
  - &clang
    name: 11
    image: teeks99/clang-ubuntu:11
    commands:
      - apt-get update && apt-get -qq -y install curl
      - export CC=clang-$${DRONE_STEP_NAME}
      - export CXX=clang++-$${DRONE_STEP_NAME}
      - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
      - make showcxxversion && make clean && make -j4 $${MAKE_OPTIONS}
      - make test
      - make report
      - make clean
    # depends_on: [ clone ]
  -
    <<: *clang
    name: 10
    image: teeks99/clang-ubuntu:10
  -
    <<: *clang
    name: 9
    image: teeks99/clang-ubuntu:9
  -
    <<: *clang
    name: 8
    image: teeks99/clang-ubuntu:8
  -
    <<: *clang
    name: 7
    image: teeks99/clang-ubuntu:7
  -
    <<: *clang
    name: 6.0
    image: teeks99/clang-ubuntu:6
  -
    <<: *clang
    name: 5.0
    image: teeks99/clang-ubuntu:5
  -
    <<: *clang
    name: 4.0
    image: teeks99/clang-ubuntu:4

---

kind: pipeline
name: clang-old-matrix

trigger:
  branch:
    - master
    - develop

image_pull_secrets:
  - dockerconfig

steps:
  - &clang
    name: 3.9
    image: teeks99/clang-ubuntu:3.9
    commands:
      - apt-get update && apt-get -qq -y install curl
      - export CC=clang-$${DRONE_STEP_NAME}
      - export CXX=clang++-$${DRONE_STEP_NAME}
      - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
      - make showcxxversion && make clean && make -j4 $${MAKE_OPTIONS}
      - make test
      - make report
      - make clean
    # depends_on: [ clone ]
  # -
  #   <<: *clang
  #   name: 3.9
  #   image: teeks99/clang-ubuntu:3.9
  -
    <<: *clang
    name: 3.8
    image: teeks99/clang-ubuntu:3.8
  -
    <<: *clang
    name: 3.7
    image: teeks99/clang-ubuntu:3.7
  -
    <<: *clang
    name: 3.6
    image: teeks99/clang-ubuntu:3.6
  -
    <<: *clang
    name: 3.5
    image: teeks99/clang-ubuntu:3.5
  -
    <<: *clang
    name: 3.4
    image: teeks99/clang-ubuntu:3.4
  -
    <<: *clang
    name: 3.3
    image: teeks99/clang-ubuntu:3.3
  -
    <<: *clang
    name: 3.2
    image: teeks99/clang-ubuntu:3.2
  -
    <<: *clang
    name: 3.1
    image: teeks99/clang-ubuntu:3.1
  -
    <<: *clang
    name: 3.0
    image: teeks99/clang-ubuntu:3.0
  -
    <<: *clang
    name: 2.9
    image: teeks99/clang-ubuntu:2.9
    commands:
      - export CC=clang-$${DRONE_STEP_NAME}
      - export CXX=clang++-$${DRONE_STEP_NAME}
      - "cp -R ./ ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
      - find . -type f \( -name \*.hpp -or -name \*.cpp -or -name \*.ipp \) -exec sed -i -e '1s/^\xEF\xBB\xBF//' {} \;
      - cd test
      - make showcxxversion && make clean && make -j4 STDFLAG=-std=c++98
      - make test
      - make report
      - make clean

---

kind: pipeline
name: cpp98

trigger:
  branch:
    - master
    - develop

image_pull_secrets:
  - dockerconfig

steps:
  - &gcc
    name: gcc-10-c++98
    image: gcc:10
    commands: &syntax-test-commands
      - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
      - make clean && make run_syntax_tests report $${MAKE_OPTIONS}
      - make clean && make run_syntax_tests report $${MAKE_OPTIONS} USE_GNU_EXTENSION=1
      - make clean
    environment:
      MAKE_OPTIONS: STDFLAG_VALUE=c++98
    # depends_on: [ clone ]
  -
    <<: *gcc
    name: gcc-9-c++98
    image: gcc:9
  -
    <<: *gcc
    name: gcc-8-c++98
    image: gcc:8
  -
    <<: *gcc
    name: gcc-7-c++98
    image: gcc:7
  -
    <<: *gcc
    name: gcc-6-c++98
    image: gcc:6
  -
    <<: *gcc
    name: gcc-5-c++98
    image: gcc:5
  -
    <<: *gcc
    name: gcc-4.9-c++98
    image: gcc:4.9
  -
    <<: *gcc
    name: gcc-4.8-c++98
    image: gcc:4.8
  -
    <<: *gcc
    name: gcc-4.7-c++98
    image: gcc:4.7
  -
    <<: *gcc
    name: gcc-4.6-c++98
    image: gcc:4.6

  - &clang
    name: 11
    image: teeks99/clang-ubuntu:11
    commands:
      - apt-get update && apt-get -qq -y install curl
      - export CC=clang-$${DRONE_STEP_NAME}
      - export CXX=clang++-$${DRONE_STEP_NAME}
      - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
      - make clean && make run_syntax_tests report $${MAKE_OPTIONS}
      - make clean && make run_syntax_tests report $${MAKE_OPTIONS} USE_GNU_EXTENSION=1
      - make clean
    environment:
      MAKE_OPTIONS: STDFLAG_VALUE=c++98
    # depends_on: [ clone ]
  -
    <<: *clang
    name: 10
    image: teeks99/clang-ubuntu:10
  -
    <<: *clang
    name: 9
    image: teeks99/clang-ubuntu:9
  -
    <<: *clang
    name: 8
    image: teeks99/clang-ubuntu:8
  -
    <<: *clang
    name: 7
    image: teeks99/clang-ubuntu:7
  -
    <<: *clang
    name: 6.0
    image: teeks99/clang-ubuntu:6
  -
    <<: *clang
    name: 5.0
    image: teeks99/clang-ubuntu:5
  -
    <<: *clang
    name: 4.0
    image: teeks99/clang-ubuntu:4
  -
    <<: *clang
    name: 3.9
    image: teeks99/clang-ubuntu:3.9
  -
    <<: *clang
    name: 3.8
    image: teeks99/clang-ubuntu:3.8
  -
    <<: *clang
    name: 3.7
    image: teeks99/clang-ubuntu:3.7
  -
    <<: *clang
    name: 3.6
    image: teeks99/clang-ubuntu:3.6
  -
    <<: *clang
    name: 3.5
    image: teeks99/clang-ubuntu:3.5
  -
    <<: *clang
    name: 3.4
    image: teeks99/clang-ubuntu:3.4
  -
    <<: *clang
    name: 3.3
    image: teeks99/clang-ubuntu:3.3
  -
    <<: *clang
    name: 3.2
    image: teeks99/clang-ubuntu:3.2
  -
    <<: *clang
    name: 3.1
    image: teeks99/clang-ubuntu:3.1
  -
    <<: *clang
    name: 3.0
    image: teeks99/clang-ubuntu:3.0

# ---

# kind: pipeline
# name: gtest-compatible-released

# trigger:
#   branch:
#     - master
#     - develop
#     - feature/*
#     - fix/*
#     - drone/*

# steps:
# - name: latest
#   image: srzzumix/googletest:latest
#   environment:
#     GTEST_EXPECT_VERSION: 0x01100000
#   commands:
#     - "cd test"
#     - "make showcxxversion"
#     - >
#       make clean &&
#       make -j4 USE_GTEST=1             GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} GTEST_EXPECT_LATEST=1 &&
#       make test
#     - >
#       make clean &&
#       make -j4 USE_GTEST=1 USE_GMOCK=1 GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} GTEST_EXPECT_LATEST=1 &&
#       make test
#   depends_on: [ clone ]
#   when:
#     branch:
#       exclude:
#         - master
# - name: release-1.10.0
#   image: srzzumix/googletest:release-1.10.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01100000
#   commands: &gtest-compatible-commands
#     - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
#     - "make showcxxversion"
#     - >
#       make clean &&
#       make -j4 USE_GTEST=1             GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} &&
#       make test
#     - >
#       make clean &&
#       make -j4 USE_GTEST=1 USE_GMOCK=1 GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} &&
#       make test
#   depends_on: [ clone ]
# - name: release-1.8.1
#   image: srzzumix/googletest:release-1.8.1
#   environment:
#     GTEST_EXPECT_VERSION: 0x01080100
#   commands: *gtest-compatible-commands
#   depends_on: [ clone ]
# - name: release-1.8.0
#   image: srzzumix/googletest:release-1.8.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01080000
#   commands: *gtest-compatible-commands
#   depends_on: [ clone ]
# - name: release-1.7.0
#   image: srzzumix/googletest:release-1.7.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01070000
#   commands: *gtest-compatible-commands
#   depends_on: [ clone ]
# - name: release-1.6.0
#   image: srzzumix/googletest:release-1.6.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01060000
#   commands: *gtest-compatible-commands
#   depends_on: [ clone ]
# - name: release-1.5.0
#   image: srzzumix/googletest:release-1.5.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01050000
#   commands: *gtest-compatible-commands
#   depends_on: [ clone ]
# # https://github.com/srz-zumix/docker-googletest/issues/2
# # - name: release-1.4.0
# #   image: srzzumix/googletest:release-1.4.0
# #   environment:
# #     GTEST_EXPECT_VERSION: 0x01040000
# #   commands: *gtest-compatible-commands
# #   depends_on: [ clone ]
# #  google test 1.3.0 or less is not supported...
# # - name: release-1.3.0
# #   image: srzzumix/googletest:release-1.3.0
# #   environment:
# #     GTEST_EXPECT_VERSION: 0x01030000
# #   commands: *gtest-compatible-commands
# #   depends_on: [ clone ]
# # - name: release-1.2.1
# #   image: srzzumix/googletest:release-1.2.1
# #   environment:
# #     GTEST_EXPECT_VERSION: 0x01020100
# #   commands: *gtest-compatible-commands
# #   depends_on: [ clone ]
# # - name: release-1.2.0
# #   image: srzzumix/googletest:release-1.2.0
# #   environment:
# #     GTEST_EXPECT_VERSION: 0x01020000
# #   commands: *gtest-compatible-commands
# #   depends_on: [ clone ]
# # - name: release-1.1.0
# #   image: srzzumix/googletest:release-1.1.0
# #   environment:
# #     GTEST_EXPECT_VERSION: 0x01010000
# #   commands: *gtest-compatible-commands
# #   depends_on: [ clone ]
# # - name: release-1.0.0
# #   image: srzzumix/googletest:release-1.0.0
# #   environment:
# #     GTEST_EXPECT_VERSION: 0x01000000
# #   commands: *gtest-compatible-commands
# #   depends_on: [ clone ]
# - name: slack
#   image: plugins/slack
#   settings:
#     webhook:
#       from_secret: SLACK_WEBHOOK
#     channel: ci
#     username: drone
#     icon_url: https://raw.githubusercontent.com/drone/brand/master/logos/png/drone-logo-dark_256.png
#   when:
#     status: [ failure ]
#   depends_on:
#     - latest
#     - release-1.10.0
#     - release-1.8.1
#     - release-1.8.0
#     - release-1.7.0
#     - release-1.6.0
#     - release-1.5.0
#     # - release-1.4.0
#     # - release-1.3.0
#     # - release-1.2.1
#     # - release-1.2.0
#     # - release-1.1.0
#     # - release-1.0.0

# ---
# kind: pipeline
# name: gtest-version-detect

# trigger:
#   branch:
#     - master
#     - develop
#     - feature/*
#     - fix/*
#     - drone/*

# steps:
# - name: latest
#   image: srzzumix/googletest:latest
#   environment:
#     GTEST_EXPECT_VERSION: 0x01100000
#   commands:
#     - "cd test"
#     - "make showcxxversion"
#     - >
#       make clean &&
#       make USE_GTEST=1             GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} GTEST_EXPECT_LATEST=1 gtest-version
#     - >
#       make clean &&
#       make USE_GTEST=1 USE_GMOCK=1 GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} GTEST_EXPECT_LATEST=1 gtest-version
#   depends_on: [ clone ]
#   when:
#     branch:
#       exclude:
#         - master
#   depends_on: [ clone ]
# - name: release-1.10.0
#   image: srzzumix/googletest:release-1.10.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01100000
#   commands: &gtest-version-detect-commands
#     - "cp -R ./test ./$${DRONE_STEP_NAME} && cd $${DRONE_STEP_NAME}"
#     - "make showcxxversion"
#     - >
#       make clean &&
#       make USE_GTEST=1             GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} gtest-version
#     - >
#       make clean &&
#       make USE_GTEST=1 USE_GMOCK=1 GTEST_EXPECT_VER=$${GTEST_EXPECT_VERSION} gtest-version
#   depends_on: [ clone ]
# - name: release-1.8.1
#   image: srzzumix/googletest:release-1.8.1
#   environment:
#     GTEST_EXPECT_VERSION: 0x01080100
#   commands: *gtest-version-detect-commands
#   depends_on: [ clone ]
# - name: release-1.8.0
#   image: srzzumix/googletest:release-1.8.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01080000
#   commands: *gtest-version-detect-commands
#   depends_on: [ clone ]
# - name: release-1.7.0
#   image: srzzumix/googletest:release-1.7.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01070000
#   commands: *gtest-version-detect-commands
#   depends_on: [ clone ]
# - name: release-1.6.0
#   image: srzzumix/googletest:release-1.6.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01060000
#   commands: *gtest-version-detect-commands
#   depends_on: [ clone ]
# - name: release-1.5.0
#   image: srzzumix/googletest:release-1.5.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01050000
#   commands: *gtest-version-detect-commands
#   depends_on: [ clone ]
# - name: release-1.4.0
#   image: srzzumix/googletest:release-1.4.0
#   environment:
#     GTEST_EXPECT_VERSION: 0x01040000
#   commands: *gtest-version-detect-commands
#   depends_on: [ clone ]
# #  google test 1.3.0 or less is not supported...
# # - name: release-1.3.0
# #   image: srzzumix/googletest:release-1.3.0
# #   environment:
# #     GTEST_EXPECT_VERSION: 0x01030000
# #   commands: *gtest-version-detect-commands
# #   depends_on: [ clone ]
# # - name: release-1.2.1
# #   image: srzzumix/googletest:release-1.2.1
# #   environment:
# #     GTEST_EXPECT_VERSION: 0x01020100
# #   commands: *gtest-version-detect-commands
# #   depends_on: [ clone ]
# # - name: release-1.2.0
# #   image: srzzumix/googletest:release-1.2.0
# #   environment:
# #     GTEST_EXPECT_VERSION: 0x01020000
# #   commands: *gtest-version-detect-commands
# #   depends_on: [ clone ]
# # - name: release-1.1.0
# #   image: srzzumix/googletest:release-1.1.0
# #   environment:
# #     GTEST_EXPECT_VERSION: 0x01010000
# #   commands: *gtest-version-detect-commands
# #   depends_on: [ clone ]
# # - name: release-1.0.0
# #   image: srzzumix/googletest:release-1.0.0
# #   environment:
# #     GTEST_EXPECT_VERSION: 0x01000000
# #   commands: *gtest-version-detect-commands
# #   depends_on: [ clone ]
# - name: slack
#   image: plugins/slack
#   settings:
#     webhook:
#       from_secret: SLACK_WEBHOOK
#     channel: ci
#     username: drone
#     icon_url: https://raw.githubusercontent.com/drone/brand/master/logos/png/drone-logo-dark_256.png
#   when:
#     status: [ failure ]
#   depends_on:
#     - latest
#     - release-1.10.0
#     - release-1.8.1
#     - release-1.8.0
#     - release-1.7.0
#     - release-1.6.0
#     - release-1.5.0
#     - release-1.4.0
#     # - release-1.3.0
#     # - release-1.2.1
#     # - release-1.2.0
#     # - release-1.1.0
#     # - release-1.0.0

# ---
# kind: pipeline
# name: build_docker

# trigger:
#   branch:
#     - master
#     - develop
#     - feature/*
#     - drone/*
#   event:
#     - push

# steps:
# - name: build
#   image: plugins/docker
#   settings:
#     dockerfile: tools/docker/Dockerfile
#     repo: srzzumix/iutest
#     dry_run: true
