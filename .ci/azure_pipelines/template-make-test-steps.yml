# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

# optional make test steps template

parameters:
  options: ''
  package_name: 'default'

steps:
- script: |
    ulimit -c unlimited && ulimit -a
    mkdir -p ~/.config/apport/
    echo [main] > ~/.config/apport/settings
    echo unpackaged=true >> ~/.config/apport/settings
    cat ~/.config/apport/settings
  displayName: 'setup'
  condition: eq(variables['Agent.OS'], 'Linux')
- script: make -C test showcxxversion
  displayName: 'versions'
- script: make -C test -j4 OUTPUTXML=junit ${{ parameters.options }}
  displayName: 'make'
- script: make -C test OUTPUTXML=junit ${{ parameters.options }} ${run_option} test
  displayName: 'test'
  env:
    run_option: RUN_OPTION="--iutest_default_package_name=${{ parameters.package_name }}"
- script: |
    ls /var/crash/
    mkdir test/coredump
    # for file in `\find /var/crash/ -name '*.crash'`; do sudo cp $file test/coredump ; done
    for file in `\find /var/crash/ -name '*.crash'`; do sudo sed -i -e "s/UserGroups:\s*$/UserGroups:iutest/g" $file ; done
    for file in `\find /var/crash/ -name '*.crash'`; do apport-unpack $file test/coredump/`basename $file .crash` ; done
    cd test/coredump && ls -Ra
  displayName: 'core dump unpack'
  condition: failed()
- task: PublishPipelineArtifact@0
  condition: failed()
  inputs:
    artifactName: 'core dump'
    targetPath: 'test/coredump'

- task: PublishTestResults@2
  inputs:
    testResultsFiles: 'test/*.xml'
