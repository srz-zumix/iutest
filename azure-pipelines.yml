trigger:
#  batch: true
  branches:
    include:
      - master
      - develop
  paths:
    exclude:
      - "*.md"
      - docs/*
      - Jenkinsfile
      - LICENSE
      - .bandit
      - .editorconfig
      - .hadolint.yaml
      - .lgtm.yaml
      - tox.ini
      - appveyor.yml
      - bitrise.yml
      - buddy.yml
      - .circleci/*
      - .cirrus.yml
      - .scrutinizer.yml
      - codecov.yml
      - codefresh.yml
      - codeship-services.yml
      - codeship-steps.yml
      - .drone.yml
      - .github/*
      - .razorops.yaml
      - .semaphore/*
      - shippable.yml
      - sider.yml
      - .travis.yml
      - wercker.yml

pr:
  branches:
    include:
      - master
      - develop
      - azure-pipelines/*
      - azurepipelines/*
      - feature/*
      - fix/*

stages:
  - stage: Precheck
    jobs:
      - job: syntax_test
        pool:
          vmImage: ubuntu-16.04
        steps:
          - script: make -C test -j4 syntax_tests_run
            displayName: 'syntax test'
  - stage: Test
    dependsOn: Precheck
    jobs:
      - template: .ci/azure_pipelines/template-make-test.yml
        parameters:
          name: default
  - stage: ConfigDisabledTest
    dependsOn: Precheck
    jobs:
      - template: .ci/azure_pipelines/template-make-disabled-test.yml
        parameters:
          name: disabled
  - stage: ConfigNoFeatureTest
    dependsOn: Precheck
    jobs:
      - template: .ci/azure_pipelines/template-make-nofeature-test.yml
        parameters:
          name: nofeature
  - stage: MixConfigTest
    dependsOn: Precheck
    jobs:
      - template: .ci/azure_pipelines/template-make-mix-test.yml
        parameters:
          name: mix
  # - stage: Publish
  #   dependsOn:
  #     Test
  #     ConfigDisabledTest
  #     ConfigNoFeatureTest
  #   jobs:
  #     - job: publish
  #       pool:
  #         vmImage: ubuntu-16.04
  #       condition: always()
  #       steps:
  #         - task: PublishPipelineArtifact@0
  #           inputs:
  #             artifactName: 'xml2file'
  #             targetPath: $(Build.ArtifactStagingDirectory)
