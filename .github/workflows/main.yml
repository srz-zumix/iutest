name: GitHub Actions
on:
  pull_request:
    branches:
      - master
      - develop
      - 'feature/**'
      - 'fix/**'
      - 'gh/**'
      - 'github/**'
      - 'githubactions/**'
    paths-ignore:
      - '*.ini'
      - '*.md'
      - '*.yml'
      - '*.yaml'
      - '.circleci/**'
      - '.semaphore/**'
  push:
    branches:
      - master
      - develop

jobs:
  prepare:
    runs-on: ubuntu-18.04
    if: >
      ! contains(github.event.head_commit.message, '[ci skip]') &&
      ! contains(github.event.head_commit.message, '[skip ci]')
    steps:
      - run: |
          echo "${{ github.event.head_commit.message }}"

  login:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: login check
        run: |
          echo a | docker login
      - name: TODO
        run: |
          echo "build and push"

  llvm-basic-test:
    runs-on: windows-latest
    needs: prepare
    steps:
    - uses: actions/checkout@v2
    - name: choco-install
      shell: cmd
      run: |
        choco install -y llvm || exit 1
        call refreshenv
    - name: llvm clang test
      shell: cmd
      run: |
        set PATH=%PATH%;C:\Program Files\LLVM\bin
        make -C test clean
        make -C test CXX=clang++ CC=clang showcxxversion
        make -C test CXX=clang++ CC=clang check_stdlib
        make -C test CXX=clang++ CC=clang -j8
        make -C test CXX=clang++ CC=clang test
  mingw-basic-test:
    runs-on: windows-latest
    needs: prepare
    steps:
    - uses: actions/checkout@v2
    - name: mingw test
      shell: cmd
      run: |
        make -C test clean
        make -C test showcxxversion
        make -C test check_stdlib
        make -C test -j8
        make -C test test
  cmake-basic-test:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
    - uses: actions/checkout@master
    - name: cmake
      run: |
          mkdir ./cmake-build
          cd ./cmake-build
          cmake ../projects/cmake
    - name: cmake build
      run: cmake --build cmake-build
    - name: cmake test
      run: |
        cd cmake-build
        ctest -C Debug -V
  zapcc-basic-test:
    runs-on: ubuntu-18.04
    container:
      image: docker://srzzumix/zapcc:bionic
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    needs: prepare
    env:
      PYTHON_VERSION: 3.8
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Set Python environment variable
      run: echo "LD_LIBRARY_PATH=${{ env.pythonLocation }}/lib" >> $GITHUB_ENV
    - name: zapcc test
      run: |
        make -C test clean
        make -C test showcxxmacros
        make -C test showcxxversion
        make -C test check_stdlib
        make -C test -j1 IUTEST_REQUIRE_PYTHON=1
        make -C test test
  icpc-basic-test:
    runs-on: ubuntu-latest
    container:
      image: docker://srzzumix/oneapi-cxx:latest
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    needs: prepare
    env:
      CC: icpc
      CXX: icpc
    steps:
    - uses: actions/checkout@master
    - name: icpc test
      shell: bash
      run: |
        . /opt/intel/oneapi/setvars.sh
        make -C test clean
        make -C test showcxxmacros
        make -C test showcxxversion
        make -C test check_stdlib
        make -C test -j8
        make -C test test
  arm-none-eabi:
    strategy:
      fail-fast: false
      matrix:
        container-version:
          - "6-2016q4"
          - "7-2017q4"
          - "8-2018q4"
          - "9-2019q4"
          - "latest"
    runs-on: ubuntu-latest
    container:
      image: docker://srzzumix/arm-none-eabi:${{ matrix.container-version }}
      credentials:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    needs: prepare
    env:
      DEFS: --specs=nosys.specs -march=armv8-a
      LIBS: nosys
    steps:
    - uses: actions/checkout@v2
    - name: info
      run: |
        make -C test showcxxversion showcxxmacros DEFS="$DEFS"
    - name: build
      run: |
        make -C test DEFS="$DEFS"
  lint-editorconfig:
    runs-on: ubuntu-18.04
    needs: prepare
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
    - name: lint:editorconfig
      run: |
        npm install
        npm run lint:editorconfig
  iwyu:
    runs-on: ubuntu-18.04
    needs: lint-editorconfig
    steps:
    - uses: actions/checkout@v2
    - name: Include What You Use
      uses: ./.github/actions/iwyu
      with:
        args: /work/projects/cmake -Dbuild_test_namespace_test=OFF
