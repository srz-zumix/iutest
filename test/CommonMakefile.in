#
# Test Makefile Common
#
# Copyright (C) 2017-2019, Takazumi Shirayanagi
# This software is released under the new BSD License,
# see LICENSE
#

# iutest root directory
IUTEST_DIR = ..
IUTEST_INCLUDE = -I$(IUTEST_DIR)/include

# All iutest headers.  Usually you shouldn't change this
# definition.
IUTEST_HEADERS =$(IUTEST_DIR)/include/*.hpp \
				$(IUTEST_DIR)/include/impl/*.ipp \
				$(IUTEST_DIR)/include/internal/*.hpp \
				$(IUTEST_DIR)/include/listener/*.hpp \
				$(IUTEST_DIR)/include/util/*.hpp \
				$(IUTEST_DIR)/include/gtest/*.hpp \
				$(IUTEST_DIR)/include/gtest/switch/*.hpp

ALLTESTS_TEST_SRCS= \
		almost_eq_tests.cpp \
		assertion_tests.cpp \
		basic_tests.cpp \
		combine_tests.cpp \
		compatibility_tests.cpp \
		filepath_tests.cpp \
		fixture_tests.cpp \
		floatingpoint_tests.cpp \
		no_failure_tests.cpp \
		nullptr_tests.cpp \
		param_test_tests1.cpp \
		param_test_tests2.cpp \
		pred_tests.cpp \
		prod_tests1.cpp \
		prod_tests2.cpp \
		spi_tests.cpp \
		static_assertion_tests.cpp \
		string_assertion_tests.cpp \
		syntax_tests.cpp \
		syntax_gtest_tests.cpp \
		type_param_tests1.cpp \
		type_param_tests2.cpp \
		type_param_tests3.cpp \
		typed_test_tests.cpp \
		values_tests.cpp \

ALLTESTS_SRCS= main.cpp \
		$(ALLTESTS_TEST_SRCS)

ALLTESTS_TARGET=all_tests

EXTENSIONTESTS_TEST_SRCS= \
		concat_tests.cpp \
		fixture_alias_tests.cpp \
		ignore_tests.cpp \
		package_tests1.cpp \
		package_tests2.cpp \
		pairwise_tests.cpp \
		param_method_tests.cpp \
		param_test_with_any_tests.cpp \
		pp_tests.cpp \
		random_values_tests.cpp \
		values_gen_tests.cpp \
		variadic_templates_tests.cpp \

EXTENSIONTESTS_SRCS= main.cpp \
		$(EXTENSIONTESTS_TEST_SRCS)

EXTENSIONTESTS_TARGET=extension_tests

UNITTESTS_TEST_SRCS= \
		unit_file_tests.cpp \
		unit_macro_tests.cpp \
		unit_misc_tests.cpp \
		unit_string_tests.cpp \
		unit_typetraits_tests.cpp \

UNITTESTS_SRCS= main.cpp \
		$(UNITTESTS_TEST_SRCS)

UNITTESTS_TARGET=unit_tests

SYNTAXTESTS_TEST_SRCS= \
		syntax_tests.cpp \

SYNTAXTESTS_SRCS= main.cpp \
		$(SYNTAXTESTS_TEST_SRCS)

SYNTAXTESTS_TARGET=syntax_tests

NAMESPACETESTS_TARGET=namespace_tests

TARGETS1= \
		also_run_disabled_tests \
		assertion_return_tests \
		assume_tests \
		break_on_failure_nobreak_tests \
		catch_exceptions_tests \
		charcode_tests \
		commandline_tests \
		csvparams_invalid_file_tests \
		csvparams_tests \
		cxx_feature_tests \
		disabled_tests \
		env_var_gtest_tests \
		environment_tests \
		exception_assertion_tests \
		exception_tests \
		expression_assertion_tests \
		file_system_tests \
		filter_tests \
		flagfile_gtest_tests \
		gtest_version_tests \
		help_tests \
		inform_tests \
		internal_log_tests \
		invalid_commandline_tests \
		japanese_tests \
		list_test_tests \
		listener_tests \
		matcher_tests \
		minimum_tests \
		no_failure_fail_tests \
		no_fatalfailure_tests \
		no_test_tests \
		output_env_var_tests \
		output_junit_xml_tests \
		output_xml_tests \
		port_tests \
		printers_tests \
		progress_tests \
		quiet_result_printer_tests \
		random_seed_tests \
		record_property_tests \
		repeat_tests \
		scoped_trace_tests \
		set_up_failure_tests \
		set_up_global_failure_tests \
		set_up_testcase_failure_tests \
		shuffle_tests \
		skip_tests \
		spi_failure_tests \
		streaming_listener_tests \
		throw_on_assertion_failure_tests \
		throw_on_failure_tests \
		tr1_tests \
		uninitialize_tests \
		util_tests \

TARGETS2= \
		assertion_only_tests \

TARGETS_IUTEST_ONLY = \
		default_main_tests \
		default_printer_listener_tests \
		env_var_tests \
		exit_tests \
		feature_spec_tests \
		filter_file_invalid_path_tests \
		filter_file_syntax_tests \
		filter_file_tests \
		flagfile_env_var_tests \
		flagfile_invalid_path_tests \
		flagfile_tests \
		invalid_locale_ctype_tests \
		ostream_formatter_tests \
		output_tests \
		output_xml_invalid_path_tests \
		output_xml_repeat_tests \
		param_test_name_invalid_tests \
		param_test_name_tests \
		no_yoda_tests \
		tap_file_generator_listener_tests \
		tap_printer_listener_tests \
		type_param_strict_tests

COMPILEERROR_TARGETS=\
		check_strict_tests \
		static_assertion_failure_tests \

BUILD_ONLY = break_on_failure_tests \

